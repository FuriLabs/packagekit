/****************************************************************************
** Meta object code from reading C++ file 'transaction.h'
**
** Created: Tue Jun 28 10:52:09 2011
**      by: The Qt Meta Object Compiler version 62 (Qt 4.7.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'transaction.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 62
#error "This file was generated using the moc from 4.7.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_PackageKit__Transaction[] = {

 // content:
       5,       // revision
       0,       // classname
       0,    0, // classinfo
      30,   14, // methods
       0,    0, // properties
       9,  164, // enums/sets
       0,    0, // constructors
       0,       // flags
      14,       // signalCount

 // signals: signature, parameters, type, tag, flags
      25,   24,   24,   24, 0x05,
      73,   35,   24,   24, 0x05,
     145,  123,   24,   24, 0x05,
     229,  215,   24,   24, 0x05,
     284,  279,   24,   24, 0x05,
     328,  315,   24,   24, 0x05,
     418,  400,   24,   24, 0x05,
     472,  457,   24,   24, 0x05,
     530,  517,   24,   24, 0x05,
     588,  580,   24,   24, 0x05,
     644,  617,   24,   24, 0x05,
     682,  677,   24,   24, 0x05,
     740,  727,   24,   24, 0x05,
     817,  805,   24,   24, 0x05,

 // slots: signature, parameters, type, tag, flags
     855,   24,   24,   24, 0x0a,
     898,  864,   24,   24, 0x08,
     958,  123,   24,   24, 0x08,
     997,  215,   24,   24, 0x08,
    1059, 1024,   24,   24, 0x08,
    1133, 1105,   24,   24, 0x08,
    1192, 1178,   24,   24, 0x08,
    1232, 1215,   24,   24, 0x08,
    1255,  517,   24,   24, 0x08,
    1297, 1280,   24,   24, 0x08,
    1399, 1330,   24,   24, 0x08,
    1495, 1486,   24,   24, 0x08,
    1584, 1527,   24,   24, 0x08,
    1753, 1652,   24,   24, 0x08,
    1863,   24,   24,   24, 0x08,
    1873,   24,   24,   24, 0x08,

 // enums: name, flags, count, data
    1886, 0x0,   36,  200,
    1891, 0x0,   66,  272,
    1897, 0x0,   10,  404,
    1902, 0x0,   27,  424,
    1909, 0x0,   17,  478,
    1917, 0x0,   37,  512,
    1924, 0x0,    4,  586,
    1934, 0x0,    9,  594,
    1943, 0x0,    3,  612,

 // enum data: key, value
    1957, uint(PackageKit::Transaction::UnknownRole),
    1969, uint(PackageKit::Transaction::RoleCancel),
    1980, uint(PackageKit::Transaction::RoleGetDepends),
    1995, uint(PackageKit::Transaction::RoleGetDetails),
    2010, uint(PackageKit::Transaction::RoleGetFiles),
    2023, uint(PackageKit::Transaction::RoleGetPackages),
    2039, uint(PackageKit::Transaction::RoleGetRepoList),
    2055, uint(PackageKit::Transaction::RoleGetRequires),
    2071, uint(PackageKit::Transaction::RoleGetUpdateDetail),
    2091, uint(PackageKit::Transaction::RoleGetUpdates),
    2106, uint(PackageKit::Transaction::RoleInstallFiles),
    2123, uint(PackageKit::Transaction::RoleInstallPackages),
    2143, uint(PackageKit::Transaction::RoleInstallSignature),
    2164, uint(PackageKit::Transaction::RoleRefreshCache),
    2181, uint(PackageKit::Transaction::RoleRemovePackages),
    2200, uint(PackageKit::Transaction::RoleRepoEnable),
    2215, uint(PackageKit::Transaction::RoleRepoSetData),
    2231, uint(PackageKit::Transaction::RoleResolve),
    2243, uint(PackageKit::Transaction::RoleRollback),
    2256, uint(PackageKit::Transaction::RoleSearchDetails),
    2274, uint(PackageKit::Transaction::RoleSearchFile),
    2289, uint(PackageKit::Transaction::RoleSearchGroup),
    2305, uint(PackageKit::Transaction::RoleSearchName),
    2320, uint(PackageKit::Transaction::RoleUpdatePackages),
    2339, uint(PackageKit::Transaction::RoleUpdateSystem),
    2356, uint(PackageKit::Transaction::RoleWhatProvides),
    2373, uint(PackageKit::Transaction::RoleAcceptEula),
    2388, uint(PackageKit::Transaction::RoleDownloadPackages),
    2409, uint(PackageKit::Transaction::RoleGetDistroUpgrades),
    2431, uint(PackageKit::Transaction::RoleGetCategories),
    2449, uint(PackageKit::Transaction::RoleGetOldTransactions),
    2472, uint(PackageKit::Transaction::RoleSimulateInstallFiles),
    2497, uint(PackageKit::Transaction::RoleSimulateInstallPackages),
    2525, uint(PackageKit::Transaction::RoleSimulateRemovePackages),
    2552, uint(PackageKit::Transaction::RoleSimulateUpdatePackages),
    2579, uint(PackageKit::Transaction::RoleUpgradeSystem),
    2597, uint(PackageKit::Transaction::UnknownError),
    2610, uint(PackageKit::Transaction::ErrorOom),
    2619, uint(PackageKit::Transaction::ErrorNoNetwork),
    2634, uint(PackageKit::Transaction::ErrorNotSupported),
    2652, uint(PackageKit::Transaction::ErrorInternalError),
    2671, uint(PackageKit::Transaction::ErrorGpgFailure),
    2687, uint(PackageKit::Transaction::ErrorPackageIdInvalid),
    2709, uint(PackageKit::Transaction::ErrorPackageNotInstalled),
    2734, uint(PackageKit::Transaction::ErrorPackageNotFound),
    2755, uint(PackageKit::Transaction::ErrorPackageAlreadyInstalled),
    2784, uint(PackageKit::Transaction::ErrorPackageDownloadFailed),
    2811, uint(PackageKit::Transaction::ErrorGroupNotFound),
    2830, uint(PackageKit::Transaction::ErrorGroupListInvalid),
    2852, uint(PackageKit::Transaction::ErrorDepResolutionFailed),
    2877, uint(PackageKit::Transaction::ErrorFilterInvalid),
    2896, uint(PackageKit::Transaction::ErrorCreateThreadFailed),
    2920, uint(PackageKit::Transaction::ErrorTransactionError),
    2942, uint(PackageKit::Transaction::ErrorTransactionCancelled),
    2968, uint(PackageKit::Transaction::ErrorNoCache),
    2981, uint(PackageKit::Transaction::ErrorRepoNotFound),
    2999, uint(PackageKit::Transaction::ErrorCannotRemoveSystemPackage),
    3030, uint(PackageKit::Transaction::ErrorProcessKill),
    3047, uint(PackageKit::Transaction::ErrorFailedInitialization),
    3073, uint(PackageKit::Transaction::ErrorFailedFinalise),
    3093, uint(PackageKit::Transaction::ErrorFailedConfigParsing),
    3118, uint(PackageKit::Transaction::ErrorCannotCancel),
    3136, uint(PackageKit::Transaction::ErrorCannotGetLock),
    3155, uint(PackageKit::Transaction::ErrorNoPackagesToUpdate),
    3179, uint(PackageKit::Transaction::ErrorCannotWriteRepoConfig),
    3206, uint(PackageKit::Transaction::ErrorLocalInstallFailed),
    3230, uint(PackageKit::Transaction::ErrorBadGpgSignature),
    3251, uint(PackageKit::Transaction::ErrorMissingGpgSignature),
    3276, uint(PackageKit::Transaction::ErrorCannotInstallSourcePackage),
    3308, uint(PackageKit::Transaction::ErrorRepoConfigurationError),
    3336, uint(PackageKit::Transaction::ErrorNoLicenseAgreement),
    3360, uint(PackageKit::Transaction::ErrorFileConflicts),
    3379, uint(PackageKit::Transaction::ErrorPackageConflicts),
    3401, uint(PackageKit::Transaction::ErrorRepoNotAvailable),
    3423, uint(PackageKit::Transaction::ErrorInvalidPackageFile),
    3447, uint(PackageKit::Transaction::ErrorPackageInstallBlocked),
    3474, uint(PackageKit::Transaction::ErrorPackageCorrupt),
    3494, uint(PackageKit::Transaction::ErrorAllPackagesAlreadyInstalled),
    3527, uint(PackageKit::Transaction::ErrorFileNotFound),
    3545, uint(PackageKit::Transaction::ErrorNoMoreMirrorsToTry),
    3569, uint(PackageKit::Transaction::ErrorNoDistroUpgradeData),
    3594, uint(PackageKit::Transaction::ErrorIncompatibleArchitecture),
    3624, uint(PackageKit::Transaction::ErrorNoSpaceOnDevice),
    3645, uint(PackageKit::Transaction::ErrorMediaChangeRequired),
    3670, uint(PackageKit::Transaction::ErrorNotAuthorized),
    3689, uint(PackageKit::Transaction::ErrorUpdateNotFound),
    3709, uint(PackageKit::Transaction::ErrorCannotInstallRepoUnsigned),
    3740, uint(PackageKit::Transaction::ErrorCannotUpdateRepoUnsigned),
    3770, uint(PackageKit::Transaction::ErrorCannotGetFilelist),
    3793, uint(PackageKit::Transaction::ErrorCannotGetRequires),
    3816, uint(PackageKit::Transaction::ErrorCannotDisableRepository),
    3845, uint(PackageKit::Transaction::ErrorRestrictedDownload),
    3869, uint(PackageKit::Transaction::ErrorPackageFailedToConfigure),
    3899, uint(PackageKit::Transaction::ErrorPackageFailedToBuild),
    3925, uint(PackageKit::Transaction::ErrorPackageFailedToInstall),
    3953, uint(PackageKit::Transaction::ErrorPackageFailedToRemove),
    3980, uint(PackageKit::Transaction::ErrorUpdateFailedDueToRunningProcess),
    4017, uint(PackageKit::Transaction::ErrorPackageDatabaseChanged),
    4045, uint(PackageKit::Transaction::ErrorProvideTypeNotSupported),
    4074, uint(PackageKit::Transaction::ErrorInstallRootInvalid),
    4098, uint(PackageKit::Transaction::ErrorCannotFetchSources),
    4122, uint(PackageKit::Transaction::ErrorCancelledPriority),
    4145, uint(PackageKit::Transaction::UnknownExit),
    4157, uint(PackageKit::Transaction::ExitSuccess),
    4169, uint(PackageKit::Transaction::ExitFailed),
    4180, uint(PackageKit::Transaction::ExitCancelled),
    4194, uint(PackageKit::Transaction::ExitKeyRequired),
    4210, uint(PackageKit::Transaction::ExitEulaRequired),
    4227, uint(PackageKit::Transaction::ExitKilled),
    4238, uint(PackageKit::Transaction::ExitMediaChangeRequired),
    4262, uint(PackageKit::Transaction::ExitNeedUntrusted),
    4280, uint(PackageKit::Transaction::ExitCancelledPriority),
    4302, uint(PackageKit::Transaction::UnknownFilter),
    4316, uint(PackageKit::Transaction::FilterNone),
    4327, uint(PackageKit::Transaction::FilterInstalled),
    4343, uint(PackageKit::Transaction::FilterNotInstalled),
    4362, uint(PackageKit::Transaction::FilterDevel),
    4374, uint(PackageKit::Transaction::FilterNotDevel),
    4389, uint(PackageKit::Transaction::FilterGui),
    4399, uint(PackageKit::Transaction::FilterNotGui),
    4412, uint(PackageKit::Transaction::FilterFree),
    4423, uint(PackageKit::Transaction::FilterNotFree),
    4437, uint(PackageKit::Transaction::FilterVisible),
    4451, uint(PackageKit::Transaction::FilterNotVisible),
    4468, uint(PackageKit::Transaction::FilterSupported),
    4484, uint(PackageKit::Transaction::FilterNotSupported),
    4503, uint(PackageKit::Transaction::FilterBasename),
    4518, uint(PackageKit::Transaction::FilterNotBasename),
    4536, uint(PackageKit::Transaction::FilterNewest),
    4549, uint(PackageKit::Transaction::FilterNotNewest),
    4565, uint(PackageKit::Transaction::FilterArch),
    4576, uint(PackageKit::Transaction::FilterNotArch),
    4590, uint(PackageKit::Transaction::FilterSource),
    4603, uint(PackageKit::Transaction::FilterNotSource),
    4619, uint(PackageKit::Transaction::FilterCollections),
    4637, uint(PackageKit::Transaction::FilterNotCollections),
    4658, uint(PackageKit::Transaction::FilterApplication),
    4676, uint(PackageKit::Transaction::FilterNotApplication),
    4697, uint(PackageKit::Transaction::FilterLast),
    4708, uint(PackageKit::Transaction::UnknownMessage),
    4723, uint(PackageKit::Transaction::MessageBrokenMirror),
    4743, uint(PackageKit::Transaction::MessageConnectionRefused),
    4768, uint(PackageKit::Transaction::MessageParameterInvalid),
    4792, uint(PackageKit::Transaction::MessagePriorityInvalid),
    4815, uint(PackageKit::Transaction::MessageBackendError),
    4835, uint(PackageKit::Transaction::MessageDaemonError),
    4854, uint(PackageKit::Transaction::MessageCacheBeingRebuilt),
    4879, uint(PackageKit::Transaction::MessageUntrustedPackage),
    4903, uint(PackageKit::Transaction::MessageNewerPackageExists),
    4929, uint(PackageKit::Transaction::MessageCouldNotFindPackage),
    4956, uint(PackageKit::Transaction::MessageConfigFilesChanged),
    4982, uint(PackageKit::Transaction::MessagePackageAlreadyInstalled),
    5013, uint(PackageKit::Transaction::MessageAutoremoveIgnored),
    5038, uint(PackageKit::Transaction::MessageRepoMetadataDownloadFailed),
    5072, uint(PackageKit::Transaction::MessageRepoForDevelopersOnly),
    5101, uint(PackageKit::Transaction::MessageOtherUpdatesHeldBack),
    5129, uint(PackageKit::Transaction::UnknownStatus),
    5143, uint(PackageKit::Transaction::StatusWait),
    5154, uint(PackageKit::Transaction::StatusSetup),
    5166, uint(PackageKit::Transaction::StatusRunning),
    5180, uint(PackageKit::Transaction::StatusQuery),
    5192, uint(PackageKit::Transaction::StatusInfo),
    5203, uint(PackageKit::Transaction::StatusRemove),
    5216, uint(PackageKit::Transaction::StatusRefreshCache),
    5235, uint(PackageKit::Transaction::StatusDownload),
    5250, uint(PackageKit::Transaction::StatusInstall),
    5264, uint(PackageKit::Transaction::StatusUpdate),
    5277, uint(PackageKit::Transaction::StatusCleanup),
    5291, uint(PackageKit::Transaction::StatusObsolete),
    5306, uint(PackageKit::Transaction::StatusDepResolve),
    5323, uint(PackageKit::Transaction::StatusSigCheck),
    5338, uint(PackageKit::Transaction::StatusRollback),
    5353, uint(PackageKit::Transaction::StatusTestCommit),
    5370, uint(PackageKit::Transaction::StatusCommit),
    5383, uint(PackageKit::Transaction::StatusRequest),
    5397, uint(PackageKit::Transaction::StatusFinished),
    5412, uint(PackageKit::Transaction::StatusCancel),
    5425, uint(PackageKit::Transaction::StatusDownloadRepository),
    5450, uint(PackageKit::Transaction::StatusDownloadPackagelist),
    5476, uint(PackageKit::Transaction::StatusDownloadFilelist),
    5499, uint(PackageKit::Transaction::StatusDownloadChangelog),
    5523, uint(PackageKit::Transaction::StatusDownloadGroup),
    5543, uint(PackageKit::Transaction::StatusDownloadUpdateinfo),
    5568, uint(PackageKit::Transaction::StatusRepackaging),
    5586, uint(PackageKit::Transaction::StatusLoadingCache),
    5605, uint(PackageKit::Transaction::StatusScanApplications),
    5628, uint(PackageKit::Transaction::StatusGeneratePackageList),
    5654, uint(PackageKit::Transaction::StatusWaitingForLock),
    5675, uint(PackageKit::Transaction::StatusWaitingForAuth),
    5696, uint(PackageKit::Transaction::StatusScanProcessList),
    5718, uint(PackageKit::Transaction::StatusCheckExecutableFiles),
    5745, uint(PackageKit::Transaction::StatusCheckLibraries),
    5766, uint(PackageKit::Transaction::StatusCopyFiles),
    5782, uint(PackageKit::Transaction::UnknownMediaType),
    5799, uint(PackageKit::Transaction::MediaTypeCd),
    5811, uint(PackageKit::Transaction::MediaTypeDvd),
    5824, uint(PackageKit::Transaction::MediaTypeDisc),
    5838, uint(PackageKit::Transaction::UnknownProvides),
    5854, uint(PackageKit::Transaction::ProvidesAny),
    5866, uint(PackageKit::Transaction::ProvidesModalias),
    5883, uint(PackageKit::Transaction::ProvidesCodec),
    5897, uint(PackageKit::Transaction::ProvidesMimetype),
    5914, uint(PackageKit::Transaction::ProvidesFont),
    5927, uint(PackageKit::Transaction::ProvidesHardwareDriver),
    5950, uint(PackageKit::Transaction::ProvidesPostscriptDriver),
    5975, uint(PackageKit::Transaction::ProvidesPlasmaService),
    5997, uint(PackageKit::Transaction::UnknownDistroUpgrade),
    6018, uint(PackageKit::Transaction::DistroUpgradeStable),
    6038, uint(PackageKit::Transaction::DistroUpgradeUnstable),

       0        // eod
};

static const char qt_meta_stringdata_PackageKit__Transaction[] = {
    "PackageKit::Transaction\0\0changed()\0"
    "parentId,categoryId,name,summary,icon\0"
    "category(QString,QString,QString,QString,QString)\0"
    "type,name,description\0"
    "distroUpgrade(PackageKit::Transaction::DistroUpgrade,QString,QString)\0"
    "error,details\0"
    "errorCode(PackageKit::Transaction::Error,QString)\0"
    "eula\0eulaRequired(PackageKit::Eula)\0"
    "type,id,text\0"
    "mediaChangeRequired(PackageKit::Transaction::MediaType,QString,QString"
    ")\0"
    "package,filenames\0"
    "files(PackageKit::Package,QStringList)\0"
    "status,runtime\0"
    "finished(PackageKit::Transaction::Exit,uint)\0"
    "type,message\0"
    "message(PackageKit::Transaction::Message,QString)\0"
    "package\0package(PackageKit::Package)\0"
    "repoId,description,enabled\0"
    "repoDetail(QString,QString,bool)\0info\0"
    "repoSignatureRequired(PackageKit::Signature)\0"
    "type,package\0"
    "requireRestart(PackageKit::Package::Restart,PackageKit::Package)\0"
    "transaction\0transaction(PackageKit::Transaction*)\0"
    "cancel()\0pid,license,group,detail,url,size\0"
    "details(QString,QString,QString,QString,QString,qulonglong)\0"
    "distroUpgrade(QString,QString,QString)\0"
    "errorCode(QString,QString)\0"
    "eulaId,pid,vendor,licenseAgreement\0"
    "eulaRequired(QString,QString,QString,QString)\0"
    "mediaType,mediaId,mediaText\0"
    "mediaChangeRequired(QString,QString,QString)\0"
    "pid,filenames\0files(QString,QString)\0"
    "exitCode,runtime\0finished(QString,uint)\0"
    "message(QString,QString)\0info,pid,summary\0"
    "package(QString,QString,QString)\0"
    "pid,repoName,keyUrl,keyUserid,keyId,keyFingerprint,keyTimestamp,type\0"
    "repoSignatureRequired(QString,QString,QString,QString,QString,QString,"
    "QString,QString)\0"
    "type,pid\0requireRestart(QString,QString)\0"
    "oldTid,timespec,succeeded,role,duration,data,uid,cmdline\0"
    "transaction(QString,QString,bool,QString,uint,QString,uint,QString)\0"
    "pid,updates,obsoletes,vendorUrl,bugzillaUrl,cveUrl,restart,updateText,"
    "changelog,state,issued,updated\0"
    "updateDetail(QString,QString,QString,QString,QString,QString,QString,Q"
    "String,QString,QString,QString,QString)\0"
    "destroy()\0daemonQuit()\0Role\0Error\0"
    "Exit\0Filter\0Message\0Status\0MediaType\0"
    "Provides\0DistroUpgrade\0UnknownRole\0"
    "RoleCancel\0RoleGetDepends\0RoleGetDetails\0"
    "RoleGetFiles\0RoleGetPackages\0"
    "RoleGetRepoList\0RoleGetRequires\0"
    "RoleGetUpdateDetail\0RoleGetUpdates\0"
    "RoleInstallFiles\0RoleInstallPackages\0"
    "RoleInstallSignature\0RoleRefreshCache\0"
    "RoleRemovePackages\0RoleRepoEnable\0"
    "RoleRepoSetData\0RoleResolve\0RoleRollback\0"
    "RoleSearchDetails\0RoleSearchFile\0"
    "RoleSearchGroup\0RoleSearchName\0"
    "RoleUpdatePackages\0RoleUpdateSystem\0"
    "RoleWhatProvides\0RoleAcceptEula\0"
    "RoleDownloadPackages\0RoleGetDistroUpgrades\0"
    "RoleGetCategories\0RoleGetOldTransactions\0"
    "RoleSimulateInstallFiles\0"
    "RoleSimulateInstallPackages\0"
    "RoleSimulateRemovePackages\0"
    "RoleSimulateUpdatePackages\0RoleUpgradeSystem\0"
    "UnknownError\0ErrorOom\0ErrorNoNetwork\0"
    "ErrorNotSupported\0ErrorInternalError\0"
    "ErrorGpgFailure\0ErrorPackageIdInvalid\0"
    "ErrorPackageNotInstalled\0ErrorPackageNotFound\0"
    "ErrorPackageAlreadyInstalled\0"
    "ErrorPackageDownloadFailed\0"
    "ErrorGroupNotFound\0ErrorGroupListInvalid\0"
    "ErrorDepResolutionFailed\0ErrorFilterInvalid\0"
    "ErrorCreateThreadFailed\0ErrorTransactionError\0"
    "ErrorTransactionCancelled\0ErrorNoCache\0"
    "ErrorRepoNotFound\0ErrorCannotRemoveSystemPackage\0"
    "ErrorProcessKill\0ErrorFailedInitialization\0"
    "ErrorFailedFinalise\0ErrorFailedConfigParsing\0"
    "ErrorCannotCancel\0ErrorCannotGetLock\0"
    "ErrorNoPackagesToUpdate\0"
    "ErrorCannotWriteRepoConfig\0"
    "ErrorLocalInstallFailed\0ErrorBadGpgSignature\0"
    "ErrorMissingGpgSignature\0"
    "ErrorCannotInstallSourcePackage\0"
    "ErrorRepoConfigurationError\0"
    "ErrorNoLicenseAgreement\0ErrorFileConflicts\0"
    "ErrorPackageConflicts\0ErrorRepoNotAvailable\0"
    "ErrorInvalidPackageFile\0"
    "ErrorPackageInstallBlocked\0"
    "ErrorPackageCorrupt\0"
    "ErrorAllPackagesAlreadyInstalled\0"
    "ErrorFileNotFound\0ErrorNoMoreMirrorsToTry\0"
    "ErrorNoDistroUpgradeData\0"
    "ErrorIncompatibleArchitecture\0"
    "ErrorNoSpaceOnDevice\0ErrorMediaChangeRequired\0"
    "ErrorNotAuthorized\0ErrorUpdateNotFound\0"
    "ErrorCannotInstallRepoUnsigned\0"
    "ErrorCannotUpdateRepoUnsigned\0"
    "ErrorCannotGetFilelist\0ErrorCannotGetRequires\0"
    "ErrorCannotDisableRepository\0"
    "ErrorRestrictedDownload\0"
    "ErrorPackageFailedToConfigure\0"
    "ErrorPackageFailedToBuild\0"
    "ErrorPackageFailedToInstall\0"
    "ErrorPackageFailedToRemove\0"
    "ErrorUpdateFailedDueToRunningProcess\0"
    "ErrorPackageDatabaseChanged\0"
    "ErrorProvideTypeNotSupported\0"
    "ErrorInstallRootInvalid\0ErrorCannotFetchSources\0"
    "ErrorCancelledPriority\0UnknownExit\0"
    "ExitSuccess\0ExitFailed\0ExitCancelled\0"
    "ExitKeyRequired\0ExitEulaRequired\0"
    "ExitKilled\0ExitMediaChangeRequired\0"
    "ExitNeedUntrusted\0ExitCancelledPriority\0"
    "UnknownFilter\0FilterNone\0FilterInstalled\0"
    "FilterNotInstalled\0FilterDevel\0"
    "FilterNotDevel\0FilterGui\0FilterNotGui\0"
    "FilterFree\0FilterNotFree\0FilterVisible\0"
    "FilterNotVisible\0FilterSupported\0"
    "FilterNotSupported\0FilterBasename\0"
    "FilterNotBasename\0FilterNewest\0"
    "FilterNotNewest\0FilterArch\0FilterNotArch\0"
    "FilterSource\0FilterNotSource\0"
    "FilterCollections\0FilterNotCollections\0"
    "FilterApplication\0FilterNotApplication\0"
    "FilterLast\0UnknownMessage\0MessageBrokenMirror\0"
    "MessageConnectionRefused\0"
    "MessageParameterInvalid\0MessagePriorityInvalid\0"
    "MessageBackendError\0MessageDaemonError\0"
    "MessageCacheBeingRebuilt\0"
    "MessageUntrustedPackage\0"
    "MessageNewerPackageExists\0"
    "MessageCouldNotFindPackage\0"
    "MessageConfigFilesChanged\0"
    "MessagePackageAlreadyInstalled\0"
    "MessageAutoremoveIgnored\0"
    "MessageRepoMetadataDownloadFailed\0"
    "MessageRepoForDevelopersOnly\0"
    "MessageOtherUpdatesHeldBack\0UnknownStatus\0"
    "StatusWait\0StatusSetup\0StatusRunning\0"
    "StatusQuery\0StatusInfo\0StatusRemove\0"
    "StatusRefreshCache\0StatusDownload\0"
    "StatusInstall\0StatusUpdate\0StatusCleanup\0"
    "StatusObsolete\0StatusDepResolve\0"
    "StatusSigCheck\0StatusRollback\0"
    "StatusTestCommit\0StatusCommit\0"
    "StatusRequest\0StatusFinished\0StatusCancel\0"
    "StatusDownloadRepository\0"
    "StatusDownloadPackagelist\0"
    "StatusDownloadFilelist\0StatusDownloadChangelog\0"
    "StatusDownloadGroup\0StatusDownloadUpdateinfo\0"
    "StatusRepackaging\0StatusLoadingCache\0"
    "StatusScanApplications\0StatusGeneratePackageList\0"
    "StatusWaitingForLock\0StatusWaitingForAuth\0"
    "StatusScanProcessList\0StatusCheckExecutableFiles\0"
    "StatusCheckLibraries\0StatusCopyFiles\0"
    "UnknownMediaType\0MediaTypeCd\0MediaTypeDvd\0"
    "MediaTypeDisc\0UnknownProvides\0ProvidesAny\0"
    "ProvidesModalias\0ProvidesCodec\0"
    "ProvidesMimetype\0ProvidesFont\0"
    "ProvidesHardwareDriver\0ProvidesPostscriptDriver\0"
    "ProvidesPlasmaService\0UnknownDistroUpgrade\0"
    "DistroUpgradeStable\0DistroUpgradeUnstable\0"
};

const QMetaObject PackageKit::Transaction::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_PackageKit__Transaction,
      qt_meta_data_PackageKit__Transaction, 0 }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &PackageKit::Transaction::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *PackageKit::Transaction::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *PackageKit::Transaction::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_PackageKit__Transaction))
        return static_cast<void*>(const_cast< Transaction*>(this));
    return QObject::qt_metacast(_clname);
}

int PackageKit::Transaction::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: changed(); break;
        case 1: category((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5]))); break;
        case 2: distroUpgrade((*reinterpret_cast< PackageKit::Transaction::DistroUpgrade(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 3: errorCode((*reinterpret_cast< PackageKit::Transaction::Error(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 4: eulaRequired((*reinterpret_cast< const PackageKit::Eula(*)>(_a[1]))); break;
        case 5: mediaChangeRequired((*reinterpret_cast< PackageKit::Transaction::MediaType(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 6: files((*reinterpret_cast< const PackageKit::Package(*)>(_a[1])),(*reinterpret_cast< const QStringList(*)>(_a[2]))); break;
        case 7: finished((*reinterpret_cast< PackageKit::Transaction::Exit(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 8: message((*reinterpret_cast< PackageKit::Transaction::Message(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 9: package((*reinterpret_cast< const PackageKit::Package(*)>(_a[1]))); break;
        case 10: repoDetail((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3]))); break;
        case 11: repoSignatureRequired((*reinterpret_cast< const PackageKit::Signature(*)>(_a[1]))); break;
        case 12: requireRestart((*reinterpret_cast< PackageKit::Package::Restart(*)>(_a[1])),(*reinterpret_cast< const PackageKit::Package(*)>(_a[2]))); break;
        case 13: transaction((*reinterpret_cast< PackageKit::Transaction*(*)>(_a[1]))); break;
        case 14: cancel(); break;
        case 15: d_ptr->details((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])),(*reinterpret_cast< qulonglong(*)>(_a[6]))); break;
        case 16: d_ptr->distroUpgrade((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 17: d_ptr->errorCode((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 18: d_ptr->eulaRequired((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4]))); break;
        case 19: d_ptr->mediaChangeRequired((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 20: d_ptr->files((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 21: d_ptr->finished((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 22: d_ptr->message((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 23: d_ptr->package((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 24: d_ptr->repoSignatureRequired((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])),(*reinterpret_cast< const QString(*)>(_a[6])),(*reinterpret_cast< const QString(*)>(_a[7])),(*reinterpret_cast< const QString(*)>(_a[8]))); break;
        case 25: d_ptr->requireRestart((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 26: d_ptr->transaction((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< uint(*)>(_a[5])),(*reinterpret_cast< const QString(*)>(_a[6])),(*reinterpret_cast< uint(*)>(_a[7])),(*reinterpret_cast< const QString(*)>(_a[8]))); break;
        case 27: d_ptr->updateDetail((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])),(*reinterpret_cast< const QString(*)>(_a[6])),(*reinterpret_cast< const QString(*)>(_a[7])),(*reinterpret_cast< const QString(*)>(_a[8])),(*reinterpret_cast< const QString(*)>(_a[9])),(*reinterpret_cast< const QString(*)>(_a[10])),(*reinterpret_cast< const QString(*)>(_a[11])),(*reinterpret_cast< const QString(*)>(_a[12]))); break;
        case 28: d_ptr->destroy(); break;
        case 29: d_ptr->daemonQuit(); break;
        default: ;
        }
        _id -= 30;
    }
    return _id;
}

// SIGNAL 0
void PackageKit::Transaction::changed()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void PackageKit::Transaction::category(const QString & _t1, const QString & _t2, const QString & _t3, const QString & _t4, const QString & _t5)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)), const_cast<void*>(reinterpret_cast<const void*>(&_t4)), const_cast<void*>(reinterpret_cast<const void*>(&_t5)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void PackageKit::Transaction::distroUpgrade(PackageKit::Transaction::DistroUpgrade _t1, const QString & _t2, const QString & _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void PackageKit::Transaction::errorCode(PackageKit::Transaction::Error _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void PackageKit::Transaction::eulaRequired(const PackageKit::Eula & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void PackageKit::Transaction::mediaChangeRequired(PackageKit::Transaction::MediaType _t1, const QString & _t2, const QString & _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void PackageKit::Transaction::files(const PackageKit::Package & _t1, const QStringList & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 6, _a);
}

// SIGNAL 7
void PackageKit::Transaction::finished(PackageKit::Transaction::Exit _t1, uint _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}

// SIGNAL 8
void PackageKit::Transaction::message(PackageKit::Transaction::Message _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 8, _a);
}

// SIGNAL 9
void PackageKit::Transaction::package(const PackageKit::Package & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 9, _a);
}

// SIGNAL 10
void PackageKit::Transaction::repoDetail(const QString & _t1, const QString & _t2, bool _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 10, _a);
}

// SIGNAL 11
void PackageKit::Transaction::repoSignatureRequired(const PackageKit::Signature & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 11, _a);
}

// SIGNAL 12
void PackageKit::Transaction::requireRestart(PackageKit::Package::Restart _t1, const PackageKit::Package & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 12, _a);
}

// SIGNAL 13
void PackageKit::Transaction::transaction(PackageKit::Transaction * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 13, _a);
}
QT_END_MOC_NAMESPACE
