From 06fae067c909db93bb5b1e1d04aa7a987208eda2 Mon Sep 17 00:00:00 2001
From: Matthias Klumpp <matthias@tenstral.net>
Date: Mon, 8 Dec 2014 19:30:23 +0100
Subject: [PATCH] aptcc: Always respect the noninteractive flag

This should unbreak offline-updates on Tanglu/Debian.
This patch also fixes some memory leaks.
---
 backends/aptcc/apt-intf.cpp | 35 +++++++++++++++++++++++++----------
 backends/aptcc/apt-intf.h   |  3 ++-
 2 files changed, 27 insertions(+), 11 deletions(-)

diff --git a/backends/aptcc/apt-intf.cpp b/backends/aptcc/apt-intf.cpp
index 18979ad..f4f74da 100644
--- a/backends/aptcc/apt-intf.cpp
+++ b/backends/aptcc/apt-intf.cpp
@@ -147,10 +147,14 @@ bool AptIntf::init()
         m_cache->Close();
     }
 
-    // Do not ask about config updates if we are not interactive
-    if (!pk_backend_job_get_interactive(m_job)) {
+    m_interactive = pk_backend_job_get_interactive(m_job);
+    if (!m_interactive) {
+        // Do not ask about config updates if we are not interactive
         _config->Set("Dpkg::Options::", "--force-confdef");
         _config->Set("Dpkg::Options::", "--force-confold");
+        // Ensure nothing interferes with questions
+        setenv("APT_LISTCHANGES_FRONTEND", "none", 1);
+        setenv("APT_LISTBUGS_FRONTEND", "none", 1);
     }
 
     // Check if there are half-installed packages and if we can fix them
@@ -1821,17 +1825,18 @@ void AptIntf::updateInterface(int fd, int writeFd)
                 argv[4] = NULL;
 
                 gchar *socket;
-                if (socket = pk_backend_job_get_frontend_socket(m_job)) {
+                if ((m_interactive) && (socket = pk_backend_job_get_frontend_socket(m_job))) {
                     envp = (gchar **) g_malloc(3 * sizeof(gchar *));
                     envp[0] = g_strdup("DEBIAN_FRONTEND=passthrough");
                     envp[1] = g_strdup_printf("DEBCONF_PIPE=%s", socket);
                     envp[2] = NULL;
                 } else {
-                    // we don't have a socket set, let's fallback to noninteractive
+                    // we don't have a socket set or are non-interactive. Use the noninteractive frontend.
                     envp = (gchar **) g_malloc(2 * sizeof(gchar *));
                     envp[0] = g_strdup("DEBIAN_FRONTEND=noninteractive");
                     envp[1] = NULL;
                 }
+                g_free(socket);
 
                 gboolean ret;
                 gint exitStatus;
@@ -2319,10 +2324,18 @@ bool AptIntf::installFile(const gchar *path, bool simulate)
     argv[3] = NULL;
 
     envp = (gchar **) g_malloc(4 * sizeof(gchar *));
-    envp[0] = g_strdup("PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin");
-    envp[1] = g_strdup("DEBIAN_FRONTEND=passthrough");
-    envp[2] = g_strdup_printf("DEBCONF_PIPE=%s", pk_backend_job_get_frontend_socket(m_job));
-    envp[3] = NULL;
+	envp[0] = g_strdup("PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin");
+    gchar *socket;
+    if ((m_interactive) && (socket = pk_backend_job_get_frontend_socket(m_job))) {
+        envp[1] = g_strdup("DEBIAN_FRONTEND=passthrough");
+        envp[2] = g_strdup_printf("DEBCONF_PIPE=%s", socket);
+        envp[3] = NULL;
+    } else {
+        // we don't have a socket set or are non-interactive, let's fallback to noninteractive
+        envp[1] = g_strdup("DEBIAN_FRONTEND=noninteractive");
+        envp[2] = NULL;
+        envp[3] = NULL;
+    }
 
     // We're installing the package now...
     pk_backend_job_package (m_job, PK_INFO_ENUM_INSTALLING, deb_package_id, deb_summary);
@@ -2339,6 +2352,8 @@ bool AptIntf::installFile(const gchar *path, bool simulate)
                  &error);
     int exit_code = WEXITSTATUS(status);
 
+    g_strfreev(envp);
+
     cout << "DpkgOut: " << std_out << endl;
     cout << "DpkgErr: " << std_err << endl;
 
@@ -2627,11 +2642,11 @@ bool AptIntf::installPackages(PkBitfield flags, bool autoremove)
 
         // Debconf handling
         gchar *socket;
-        if (socket = pk_backend_job_get_frontend_socket(m_job)) {
+        if ((m_interactive) && (socket = pk_backend_job_get_frontend_socket(m_job))) {
             setenv("DEBIAN_FRONTEND", "passthrough", 1);
             setenv("DEBCONF_PIPE", socket, 1);
         } else {
-            // we don't have a socket set, let's fallback to noninteractive
+            // we don't have a socket set or are not interactive, let's fallback to noninteractive
             setenv("DEBIAN_FRONTEND", "noninteractive", 1);
         }
         g_free(socket);
diff --git a/backends/aptcc/apt-intf.h b/backends/aptcc/apt-intf.h
index ef5435a..011d7c3 100644
--- a/backends/aptcc/apt-intf.h
+++ b/backends/aptcc/apt-intf.h
@@ -240,7 +240,7 @@ class AptIntf
      */
     bool getArchive(pkgAcquire *Owner, pkgCache::VerIterator const &Version,
                     std::string directory, std::string &StoreFilename);
-    
+
     AptCacheFile* aptCacheFile() const;
 
 private:
@@ -268,6 +268,7 @@ class AptIntf
     string     m_lastPackage;
     uint       m_lastSubProgress;
     bool       m_startCounting;
+    bool       m_interactive;
 
     // when the internal terminal timesout after no activity
     int m_terminalTimeout;
